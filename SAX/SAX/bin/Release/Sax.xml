<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sax</name>
    </assembly>
    <members>
        <member name="T:Org.System.Xml.Sax.Constants">
            <summary>Defines constants for the <see cref="N:Org.System.Xml.Sax"/> namespace.</summary> 
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.Features">
            <summary>Base name for standard SAX features.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.NamespacesFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.NamespacePrefixesFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.ValidationFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.ExternalGeneralFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.ExternalParameterFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.ResolveDtdUrisFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.LexicalParameterFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.XmlNsUrisFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.Xml11Feature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.UnicodeNormCheckFeature">
            <summary>Standard SAX feature name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Feature table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.XmlDeclFeature">
            <summary>True if parser provides implementations for the
            <see cref="P:Org.System.Xml.Sax.ILocator.XmlVersion"/> and <see cref="P:Org.System.Xml.Sax.ILocator.Encoding"/> properties,
            false otherwise.</summary>
            <remarks>Read-only. Replaces the UseLocator2Feature feature in SAX for .NET 1.0.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Locator2.html">
            Locator2 on www.saxproject.org</seealso>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.UseExternalSubsetFeature">
            <summary>True if parser calls back on <see cref="M:Org.System.Xml.Sax.IEntityResolver.GetExternalSubset(System.String,System.String)"/>
            to process an application-provided DTD, false if no such call-back is made.</summary>
            <remarks>Read-only. Replaces the UseEntityResolver2Feature feature in SAX for .NET 1.0.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html">
            EntityResolver2 on www.saxproject.org</seealso>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.ReaderControlFeature">
            <summary>True if suspending and resuming the parse process is supported,
            false otherwise.</summary>
            <remarks>Read-only. If false, then calling <see cref="M:Org.System.Xml.Sax.IXmlReader.Suspend"/>,
            <see cref="M:Org.System.Xml.Sax.IXmlReader.Resume"/> or <see cref="M:Org.System.Xml.Sax.IXmlReader.Abort"/>
            will throw a <see cref="T:System.NotSupportedException"/>.</remarks>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.Properties">
            <summary>Base name for standard SAX properties.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.XmlStringProperty">
            <summary>Standard SAX property name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Property table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.DomNodeProperty">
            <summary>Standard SAX property name.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/package-summary.html#package_description">
            Property table</see> on www.saxproject.org.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIAttributes">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIContentHandler">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIDtdHandler">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIDeclHandler">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidILexicalHandler">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIEntityResolver">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIErrorHandler">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidILocator">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIXmlReader">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIXmlFilter">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIGenericProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIBooleanProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIIntegerProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIInterfaceProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.IidIStringProperty">
            <summary>Interface GUID constant for COM interop.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Constants.XmlColon">
            <summary>Character constant.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IAttributes">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html">
            Attributes</see> and <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2.html">
            Attributes2</see> on www.saxproject.org.</summary>
            <remarks>
            This interface combines features from the <c>Attributes</c> and <c>Attributes2</c>
            interfaces specified in the original Java SAX API.
            <list type="bullet">
              <item>Some methods behave differently from Java - check method documentation.</item>
              <item>Outside of the <see cref="M:Org.System.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.System.Xml.Sax.IAttributes)"/> call-back, an
                <c>IAttributes</c> instance is not required to return meaningful information.
                It will depend on the implementation if the instance is a unique object retaining all
                information, if accessing it throws a <see cref="T:Org.System.Xml.Sax.SaxException"/>, or if it returns
                random information.</item>
              <item>Attribute names are treated the same as element names with respect to namespaces.
                See <see cref="M:Org.System.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.System.Xml.Sax.IAttributes)"/>.</item>
              <item>Namespace declarations (xmlns attributes) will be reported as attributes if the
                <c>namespace-prefixes</c> feature is true, even if namespace processing is turned on.</item>
              <item>The functionality of the <c>Attributes2.isDeclared</c> method in the Java API
                has been translated into a new return value <c>"UNDECLARED"</c> for the
                <see cref="M:Org.System.Xml.Sax.IAttributes.GetType(System.Int32)"/> method.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetUri(System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getURI(int)">
            Attributes.getURI</see> on www.saxproject.org.</summary>
            <remarks>
            <para>returns the empty string if there is no namespace for the attribute name.</para>
            Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
            </list></remarks>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetLocalName(System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getLocalName(int)">
            Attributes.getLocalName</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
              <item>Always returns a non-empty string value.</item>
            </list></remarks>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetQName(System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getQName(int)">
            Attributes.getQName</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
              <item>Always returns a non-empty string value.</item>
            </list></remarks>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetType(System.Int32)">
            <overloads>
              <summary>Returns type of specified attribute.</summary>
              <remarks>Differences to Java:
              <list type="bullet">
                <item>Throws standard .NET exceptions.</item>
                <item>Allows for two additional return values, <c>"ENUMERATION"</c> when the attribute
                  is an enumerated type, and <c>"UNDECLARED"</c> when no declaration for the attribute
                  has been read. The latter replaces
                  <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2.html#isDeclared(int)">
                  Attributes2.isDeclared</see> from the Java API.</item>
              </list></remarks>
            </overloads>
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getType(int)">
            Attributes.getType</see> on www.saxproject.org.</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetValue(System.Int32)">
            <overloads>
              <summary>Returns value of specified attribute.</summary>
              <remarks>Differences to Java:
              <list type="bullet">
                <item>Throws standard .NET exceptions.</item>
              </list></remarks>
            </overloads>
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getValue(int)">
            Attributes.getValue</see> on www.saxproject.org.</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetIndex(System.String,System.String)">
            <overloads>Returns index of specified attribute, or -1 if the attribute does not exist.</overloads>
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getIndex(java.lang.String, java.lang.String)">
            Attributes.getIndex</see> on www.saxproject.org.</summary>
            <remarks>If there is no namespace, pass the empty string for the <c>uri</c> argument.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetIndex(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getIndex(java.lang.String)">
            Attributes.getIndex</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetType(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getType(java.lang.String, java.lang.String)">
            Attributes.getType</see> on www.saxproject.org.</summary>
            <remarks>If there is no namespace, pass the empty string for the <c>uri</c> argument.</remarks>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetType(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getType(java.lang.String)">
            Attributes.getType</see> on www.saxproject.org.</summary>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetValue(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getValue(java.lang.String, java.lang.String)">
            Attributes.getValue</see> on www.saxproject.org.</summary>
            <remarks>If there is no namespace, pass the empty string for the <c>uri</c> argument.</remarks>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.GetValue(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getValue(java.lang.String)">
            Attributes.getValue</see> on www.saxproject.org.</summary>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.IsSpecified(System.Int32)">
            <overloads>
              <summary>Indicates if attribute was specified, that is, not defaulted from DTD.</summary>
              <remarks>Differences to Java:
              <list type="bullet">
                <item>Throws standard .NET exceptions.</item>
                <item>For a parser that does not read the DTD this will always return true.</item>
              </list></remarks>
            </overloads>
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2.html#isSpecified(int)">
            Attributes2.isSpecified</see> on www.saxproject.org.</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when index out of range.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.IsSpecified(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2.html#isSpecified(java.lang.String)">
            Attributes2.isSpecified</see> on www.saxproject.org.</summary>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IAttributes.IsSpecified(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2.html#isSpecified(java.lang.String, java.lang.String)">
            Attributes2.isSpecified</see> on www.saxproject.org.</summary>
            <remarks>If there is no namespace, pass the empty string for the <c>uri</c> argument.</remarks>
            <exception cref="T:System.ArgumentException">Thrown when no matching attribute can be found.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.IAttributes.Length">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Attributes.html#getLength()">
            Attributes.getLength</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IContentHandler">
            <summary>Reports the logical content of an XML document.
            See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html">
            ContentHandler</see> on www.saxproject.org.</summary>
            <remarks>The order of events in this interface must mirror the order of information
            in a well-formed XML document, but it is not necessary that the call-backs are generated
            from parsing an actual XML document - see <see cref="N:Org.System.Xml.Sax"/>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.SetDocumentLocator(Org.System.Xml.Sax.ILocator)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#setDocumentLocator(org.xml.sax.Locator)">
            ContentHandler.setDocumentLocator</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.StartDocument">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#startDocument()">
            ContentHandler.startDocument</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Stricter about when to call:
                For a stream of SAX events that represent an XML document, the SAX event producer
                must call <c>StartDocument</c> exactly once, <b>before</b> any part of the input, on
                which the SAX events are based, is processed.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.EndDocument">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#endDocument()">
            ContentHandler.endDocument</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Stricter about when to call: <c>EndDocument</c> <b>must</b> be called by the
                SAX event producer exactly once as the last event in a SAX event stream if it was
                initiated  by a <see cref="M:Org.System.Xml.Sax.IContentHandler.StartDocument"/> call, regardless of any
                exceptions or errors encountered, even after <see cref="M:Org.System.Xml.Sax.IXmlReader.Abort"/> was called.
                Depending on the call communication mechanism, however, this is no guarantee that
                the SAX event consumer will also receive the call.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.StartPrefixMapping(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#startPrefixMapping(java.lang.String, java.lang.String)">
            ContentHandler.startPrefixMapping</see> on www.saxproject.org.</summary>
            <remarks>The prefix argument for the default namespace is the empty string, and not <c>null</c>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.EndPrefixMapping(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#endPrefixMapping(java.lang.String)">
            ContentHandler.endPrefixMapping</see> on www.saxproject.org.</summary>
            <remarks>The prefix argument for the default namespace is the empty string, and not <c>null</c>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.System.Xml.Sax.IAttributes)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)">
            ContentHandler.startElement</see> on www.saxproject.org.</summary>
            <remarks><para>If there is no URI, then the <c>uri</c> argument will be the empty string
            and not <c>null</c>. This can be the case when namespace processing is turned off, or when
            the name is not in any namespace.</para>
            Differences to Java:
            <list type="bullet">
              <item><c>qName</c> and <c>localName</c> will never be <c>null</c> or the empty string.</item>
              <item><c>qName</c> and <c>localName</c> will only be different, if namespace processing
                is turned on - the <c>namespaces</c> feature is true - and the name is in a namespace
                and has a namespace prefix. Otherwise they will be identical.</item>
              <item>xmlns attributes will be reported as attributes if the <c>namespace-prefixes</c>
                feature is true, even if namespace processing is turned on.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#endElement(java.lang.String, java.lang.String, java.lang.String)">
            ContentHandler.endElement</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.Characters(System.Char[],System.Int32,System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#characters(char[], int, int)">
            ContentHandler.characters</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#ignorableWhitespace(char[], int, int)">
            ContentHandler.ignorableWhitespace</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.ProcessingInstruction(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#processingInstruction(java.lang.String, java.lang.String)">
            ContentHandler.processingInstruction</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IContentHandler.SkippedEntity(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#skippedEntity(java.lang.String)">
            ContentHandler.skippedEntity</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IDtdHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html">
            DTDHandler</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IDtdHandler.NotationDecl(System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html#notationDecl(java.lang.String, java.lang.String, java.lang.String)">
            DTDHandler.notationDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IDtdHandler.UnparsedEntityDecl(System.String,System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html#unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
            DTDHandler.unparsedEntityDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IDeclHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html">
            DeclHandler</see> on www.saxproject.org.</summary>
            <remarks>This interface is optional, a SAX parser need not implement it.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IDeclHandler.ElementDecl(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html#elementDecl(java.lang.String, java.lang.String)">
            DeclHandler.elementDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IDeclHandler.AttributeDecl(System.String,System.String,System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html#attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
            DeclHandler.attributeDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IDeclHandler.InternalEntityDecl(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html#internalEntityDecl(java.lang.String, java.lang.String)">
            DeclHandler.internalEntityDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IDeclHandler.ExternalEntityDecl(System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html#externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)">
            DeclHandler.externalEntityDecl</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.ILexicalHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html">
            LexicalHandler</see> on www.saxproject.org.</summary>
            <remarks>This interface is optional, a SAX parser need not implement it.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.StartDtd(System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#startDTD(java.lang.String, java.lang.String, java.lang.String)">
            LexicalHandler.startDTD</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.EndDtd">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#endDTD()">
            LexicalHandler.endDTD</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.StartEntity(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#startEntity(java.lang.String)">
            LexicalHandler.startEntity</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.EndEntity(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#endEntity(java.lang.String)">
            LexicalHandler.endEntity</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.StartCData">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#startCDATA()">
            LexicalHandler.startCDATA</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.EndCData">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#endCDATA()">
            LexicalHandler.endCDATA</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.ILexicalHandler.Comment(System.Char[],System.Int32,System.Int32)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html#comment(char[], int, int)">
            LexicalHandler.comment</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IEntityResolver">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/EntityResolver.html">
            EntityResolver</see> and <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html">
            EntityResolver2</see> on www.saxproject.org.</summary>
            <remarks>This interface combines features from the <c>EntityResolver</c> and <c>EntityResolver2</c>
            interfaces specified in the original Java SAX API.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IEntityResolver.GetExternalSubset(System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html#getExternalSubset(java.lang.String, java.lang.String)">
            EntityResolver2.getExternalSubset</see> on www.saxproject.org.</summary>
            <remarks>Optional method.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IEntityResolver.ResolveEntity(System.String,System.String,System.String,System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html#resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
            EntityResolver2.resolveEntity</see> on www.saxproject.org.</summary>
            <remarks>This replaces <c>IEntityResolver.ResolveEntity(string publicId, string systemId)</c> from
            SAX for .NET 1.0. For compatibility the <c>name</c> argument may be <c>null</c>.
            The <c>systemId</c> argument must be an absolute URI only if the <c>baseUri</c>
            argument is <c>null</c>.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.IErrorHandler">
            <summary>Similar to ErrorHandler interface in SAX. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html">
            ErrorHandler</see> on www.saxproject.org.</summary>
            <remarks><para>It is <b>not</b> prohibited to call back on this interface from any of the
            call-back handlers, like <see cref="T:Org.System.Xml.Sax.IContentHandler"/> and <see cref="T:Org.System.Xml.Sax.ILexicalHandler"/>.
            This allows, for example, that a schema validator implemented as <see cref="T:Org.System.Xml.Sax.IXmlFilter"/>
            can properly report validation errors through the <c>IErrorHandler</c> call-backs.</para>
            Differences to Java:
            <list type="bullet">
              <item>The arguments passed to the call-backs are not <see cref="T:Org.System.Xml.Sax.SaxParseException"/>
                objects, but instances of (a sub-class of) <see cref="T:Org.System.Xml.Sax.ParseError"/>. The reason for
                this is that using exception objects would require the creation of a new instance
                for each call-back, as an exception's standard properties can only be set in the
                constructor. This is quite inefficient when error call-backs happen frequently.</item>
              <item>To be re-usable, the <see cref="T:Org.System.Xml.Sax.ParseError"/> arguments are only valid for the
                duration of the call-back.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IErrorHandler.Warning(Org.System.Xml.Sax.ParseError)">
            <summary>Call-back for warnings. Parser can continue. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html#warning(org.xml.sax.SAXParseException)">
            ErrorHandler.warning</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IErrorHandler.Error(Org.System.Xml.Sax.ParseError)">
            <summary>Call-back for non-fatal errors. Parser can continue. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html#error(org.xml.sax.SAXParseException)">
            ErrorHandler.error</see> on www.saxproject.org.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.IErrorHandler.FatalError(Org.System.Xml.Sax.ParseError)">
            <summary>Call-back for fatal errors, like well-formedness violations.
            Parser cannot continue. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html#fatalError(org.xml.sax.SAXParseException)">
            ErrorHandler.fatalError</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.ParsedEntityType">
            <summary>Describes the kind of entity that is being parsed.</summary>
            <remarks>For document entities, the *declared* rather than the effective
            value of the standalone flag is reported.</remarks>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.Unknown">
            <summary>Type of entity not known (at this time).</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.Document">
            <summary>Document entity without specified value for the standalone flag.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.NotStandalone">
            <summary>Document entity with standalone="no".</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.Standalone">
            <summary>Document entity with standalone="yes".</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.General">
            <summary>External general entity.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.ParsedEntityType.Parameter">
            <summary>External parameter entity.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.ILocator">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Locator.html">
            Locator</see> and <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Locator2.html">
            Locator2</see> on www.saxproject.org.</summary>
            <remarks>
            <list type="bullet">
              <item>This interface combines features from the <c>Locator</c> and <c>Locator2</c>
                interfaces specified in the original Java SAX API.</item>
              <item>Any call on this interface before <see cref="M:Org.System.Xml.Sax.IContentHandler.StartDocument"/>
                or after <see cref="M:Org.System.Xml.Sax.IContentHandler.EndDocument"/> (that is, when not parsing)
                will throw a <see cref="T:Org.System.Xml.Sax.SaxException"/>.</item>
              <item>Because the <see cref="N:Org.System.Xml.Sax">definition of "parsing"</see> in SAX
                is not restricted to textual document parsing, certain properties of <c>ILocator</c>
                may not be applicable in all contexts.</item>
            </list></remarks>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.PublicId">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Locator.html#getPublicId()">
            Locator.getPublicId</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.SystemId">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Locator.html#getSystemId()">
            Locator.getSystemId</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.LineNumber">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Locator.html#getLineNumber()">
            Locator.getLineNumber</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.ColumnNumber">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/Locator.html#getColumnNumber()">
            Locator.getColumnNumber</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.XmlVersion">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Locator2.html#getXMLVersion()">
            Locator2.getXMLVersion</see> on www.saxproject.org.</summary>
            <remarks>Optional method.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.Encoding">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Locator2.html#getEncoding()">
            Locator2.getEncoding</see> on www.saxproject.org.</summary>
            <remarks>Optional method.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.ILocator.EntityType">
            <summary>Indicates if the entity currently being parsed is the document entity -
            standalone or not - or an external parsed entity.</summary>
            <remarks>Optional property.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="T:Org.System.Xml.Sax.XmlReaderStatus">
            <summary>Describes the parsing status of an <see cref="T:Org.System.Xml.Sax.IXmlReader"/> instance.</summary> 
        </member>
        <member name="F:Org.System.Xml.Sax.XmlReaderStatus.Ready">
            <summary>Parser is initialized - ready to parse (again).</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.XmlReaderStatus.Parsing">
            <summary>Parsing is under way.</summary>
            <remarks>Should only be detectable from within a call-back handler.</remarks>
        </member>
        <member name="F:Org.System.Xml.Sax.XmlReaderStatus.Suspended">
            <summary>Parsing of input source is suspended, but not completed yet.</summary>
            <remarks>Parsing can be resumed again - or aborted.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.IXmlReader">
            <summary><c>IXmlReader</c> is the interface that an XML parser confomring to the SAX
            API must implement. This interface allows an application to set and query features
            and properties in the parser, to register event handlers for document processing,
            and to initiate, suspend or resume a document parse.</summary>
            <remarks>There are some differences to the Java specification.
              <list type="bullet">
                <item>Extension properties are retrieved or set using the <see cref="T:Org.System.Xml.Sax.IProperty`1"/>
                  interface, which avoids repeated lookup by name.</item>
                <item>Explicit properties exist for registering <see cref="T:Org.System.Xml.Sax.IDeclHandler"/> and
                  <see cref="T:Org.System.Xml.Sax.ILexicalHandler"/> instances.</item>
                <item>The additional methods <see cref="M:Org.System.Xml.Sax.IXmlReader.Suspend"/>,
                  <see cref="M:Org.System.Xml.Sax.IXmlReader.Resume"/> and <see cref="M:Org.System.Xml.Sax.IXmlReader.Abort"/> allow for
                  suspending, resuming or aborting the parse process. If an implementation supports
                  these methods - as reported by the <c>reader-control</c> feature - it is only
                  required to support their functionality for content related call-backs, but not
                  for DTD related events. This capability allows one to turn a SAX parser into a
                  Pull parser when a suitable implementation of <see cref="T:Org.System.Xml.Sax.IContentHandler"/>
                  is used that calls <see cref="M:Org.System.Xml.Sax.IXmlReader.Suspend"/> whenever an event
                  of interest occurs.</item>
              </list>
            </remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html">
            XMLReader on www.saxproject.org</seealso>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.GetFeature(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#getFeature(java.lang.String)">
            XMLReader.getFeature</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
            </list></remarks>
            <exception cref="T:System.ArgumentException">Thrown when the feature name is not recognized.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the feature cannot be read.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.SetFeature(System.String,System.Boolean)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#setFeature(java.lang.String, boolean)">
            XMLReader.setFeature</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
            </list></remarks>
            <exception cref="T:System.ArgumentException">Thrown when the feature name is not recognized
            (<see cref="P:System.ArgumentException.ParamName"/> = <c>"name"</c>) or when the feature value
            is not accepted (<see cref="P:System.ArgumentException.ParamName"/> = <c>"value"</c>).</exception>
            <exception cref="T:System.NotSupportedException">Thrown when the feature cannot be set.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.GetProperty``1(System.String)">
            <summary>Returns an <see cref="T:Org.System.Xml.Sax.IProperty`1"/> interface reference for the property
            identified by <c>name</c>.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Throws standard .NET exceptions.</item>
              <item>The actual property value is accessed through <see cref="P:Org.System.Xml.Sax.IProperty`1.Value"/>.</item>
            </list></remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#getProperty(java.lang.String)">
            XMLReader.getProperty on www.saxproject.org</seealso>
            <exception cref="T:System.ArgumentException">Thrown when the property name is not recognized.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.Parse(Org.System.Xml.Sax.InputSource)">
            <summary>Parses the XML document represented by the input source. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#parse(org.xml.sax.InputSource)">
            XMLReader.parse</see> on www.saxproject.org.</summary>
            <remarks>Differences to Java:
            <list type="bullet">
              <item>Will not close the input source's stream or text reader at the end of parsing.</item>
            </list></remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.Parse(System.String)">
            <summary>Parses the XML document represented by the system identifier. See
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#parse(java.lang.String)">
            XMLReader.parse</see> on www.saxproject.org.</summary>
            <remarks>This will <b>not</b> generate a call-back on <see cref="M:Org.System.Xml.Sax.IEntityResolver.ResolveEntity(System.String,System.String,System.String,System.String)"/>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.Suspend">
            <summary>Causes parsing top stop in a resumable way.</summary>
            <remarks>
            <list type="bullet">
              <item>Optional method.</item>
              <item>It is only legal to call <c>Suspend</c> when <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/>
                has the value <c>Parsing</c>, and this should only be done from  within a handler
                call-back.</item>
              <item>On return the <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> property will have the value
                <c>Suspended</c>.</item>
              <item>An implementation may decide to suspend parsing not immediately, but rather
                "as soon as possible". This can for instance mean that, after calling <c>Suspend</c>
                from the <see cref="M:Org.System.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.System.Xml.Sax.IAttributes)"/> call-back of an empty element tag,
                the <see cref="M:Org.System.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)"/> call-back may still follow.</item>
            </list></remarks>
            <exception cref="T:Org.System.Xml.Sax.SaxException">Thrown when called outside of call-back handler.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.Abort">
            <summary>Causes parsing to stop with a fatal error.</summary>
            <remarks>
            <list type="bullet">
              <item>Optional method.</item>
              <item>It is legal to call <c>Abort</c> from within a handler call-back, that is,
                when <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> has the value <c>Parsing</c>, or from anywhere
                when parsing is suspended.</item>
              <item>On return from <see cref="M:Org.System.Xml.Sax.IXmlReader.Resume"/> or <see cref="M:Org.System.Xml.Sax.IXmlReader.Parse(Org.System.Xml.Sax.InputSource)"/>
                the <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> property will have the value <c>Ready</c>.</item>
              <item>An implementation may decide to abort parsing not immediately, but rather
                "as soon as possible". This can for instance mean that, after calling <c>Abort</c>
                from the <see cref="M:Org.System.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,Org.System.Xml.Sax.IAttributes)"/> call-back of an empty element tag,
                the <see cref="M:Org.System.Xml.Sax.IContentHandler.EndElement(System.String,System.String,System.String)"/> call-back may still follow.</item>
            </list></remarks>
            <exception cref="T:Org.System.Xml.Sax.SaxException">Thrown when called illegally.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="M:Org.System.Xml.Sax.IXmlReader.Resume">
            <summary>Resumes parsing as if <see cref="M:Org.System.Xml.Sax.IXmlReader.Parse(Org.System.Xml.Sax.InputSource)"/> continued with the
              same input source it was initially called with.</summary>
            <remarks>
            <list type="bullet">
              <item>Optional method.</item>
              <item>It is only legal to call <c>Resume</c> when parsing is suspended, that is,
                when <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> has the value <c>Suspended</c>.</item>
              <item>The <see cref="P:Org.System.Xml.Sax.IXmlReader.Status"/> property will have the value <c>Parsing</c>
                immediately afterwards (in the next handler call-back), but on return from
                <c>Resume</c> its value will either be <c>Ready</c> - when parsing is done -
                or <c>Suspended</c> - when parsing was suspended again.</item>
            </list></remarks>
            <exception cref="T:Org.System.Xml.Sax.SaxException">Thrown when called illegally.</exception>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.ContentHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#setContentHandler(org.xml.sax.ContentHandler)">
            XMLReader.setContentHandler</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.DtdHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#setDTDHandler(org.xml.sax.DTDHandler)">
            XMLReader.setDTDHandler</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.LexicalHandler">
            <summary>Gets or sets the event handler registered for lexical information.</summary>
            <remarks>Optional property.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.DeclHandler">
            <summary>Gets or sets the event handler registered for DTD declarations.</summary>
            <remarks>Optional property.</remarks>
            <exception cref="T:System.NotSupportedException">Thrown when not implemented.</exception>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.EntityResolver">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#setEntityResolver(org.xml.sax.EntityResolver)">
            XMLReader.setEntityResolver</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.ErrorHandler">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#setErrorHandler(org.xml.sax.ErrorHandler)">
            XMLReader.setErrorHandler</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlReader.Status">
            <summary>Returns which of three states the parser is in: actively processing a document,
            suspended, or ready to start with another document.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IXmlFilter">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLFilter.html">
            XMLFilter</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IXmlFilter.Parent">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/XMLFilter.html#setParent(org.xml.sax.XMLReader)">
            XMLFilter.setParent</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IProperty`1">
            <summary>Base interface for <see cref="T:Org.System.Xml.Sax.IXmlReader"/> property access.</summary>
            <remarks>Does not exist in the Java SAX API. Using such an interface to access
            a property value has the advantage that the overhead of lookup by name, and
            casting to the correct type occurs only once, on initial retrieval.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#getProperty(java.lang.String)">
            XMLReader.getProperty on www.saxproject.org</seealso>
        </member>
        <member name="P:Org.System.Xml.Sax.IProperty`1.Name">
            <summary>Name of property - one of the property constants.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.IProperty`1.Value">
            <summary>Value accessor.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.IProperty">
            <summary>Interface for object properties.</summary>
            <remarks>Retained for backwards compatibility.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.IBooleanProperty">
            <summary>Interface for boolean properties.</summary>
            <remarks>Retained for backwards compatibility.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.IIntegerProperty">
            <summary>Interface for integer properties.</summary>
            <remarks>Retained for backwards compatibility.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.IStringProperty">
            <summary>Interface for string properties.</summary>
            <remarks>Retained for backwards compatibility.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.ParseError">
            <summary>Abstract base class for all errors passed to any of the
            <see cref="T:Org.System.Xml.Sax.IErrorHandler"/> call-backs.</summary>
            <remarks>Because the <see cref="N:Org.System.Xml.Sax">definition of "parsing"</see>
            in SAX is not restricted to textual document parsing, certain properties of
            <c>ParseError</c> may not be applicable in all contexts.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/SAXParseException.html">
            SAXParseException on www.saxproject.org</seealso>
        </member>
        <member name="M:Org.System.Xml.Sax.ParseError.Throw">
            <summary>Throws new <see cref="T:Org.System.Xml.Sax.SaxParseException"/> based on this instance.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.Message">
            <summary>Error message. Must not be <c>null</c>.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.ErrorId">
            <summary>Identifies which well-formedness or validation constraint
            was violated. This may also refer to a custom error id message.
            Is <c>null</c> if such information is not available or applicable.</summary>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/SAXParseException.html#getExceptionId()">
            SAXParseException.getExceptionId on www.saxproject.org</seealso>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.PublicId">
            <summary>The public identifier of the entity where the error
            occurred, or <c>null</c> if none is available or applicable.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.SystemId">
            <summary>The system identifier of the entity where the error
            occurred, or <c>null</c> if none is available or applicable.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.LineNumber">
            <summary>The line number of the end of the text where the error
            occurred, or <c>-1</c> if none is available or applicable.</summary>
            <remarks>This number is 1-based.</remarks>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.ColumnNumber">
            <summary>The column number of the end of the text where the error
            occurred, or <c>-1</c> if none is available or applicable.</summary>
            <remarks>This number is 1-based.</remarks>
        </member>
        <member name="P:Org.System.Xml.Sax.ParseError.BaseException">
            <summary>The underlying exception, or <c>null</c> if none exists.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.SaxException">
            <summary>Base class for all SAX exceptions.</summary>
            <remarks>The .NET <see cref="T:System.ApplicationException"/> class already implements
            all of the (here missing) methods and properties, including the various
            constructors, desribed in the corresponding Java docs for
            <see href="http://www.saxproject.org/apidoc/org/xml/sax/SAXException.html">
            SAXException</see>.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.SaxParseException">
            <summary>Base class for SAX parse exceptions.</summary>
            <remarks>Inspect the optional Error property for details. In some
            cases it might be possible to down-cast this property for accessing
            additional - parser implementation specific - information. See
            <see cref="T:Org.System.Xml.Sax.IErrorHandler"/> and <see cref="T:Org.System.Xml.Sax.ParseError"/>.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/SAXParseException.html">
            SAXParseException on www.saxproject.org</seealso>
        </member>
        <member name="P:Org.System.Xml.Sax.SaxParseException.Error">
            <summary>The underlying ParseError instance, if any.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.InputSource">
            <summary>Base class for input sources.</summary>
            <remarks>Derive from this class to give specific access to input data.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html">
            InputSource on www.saxproject.org</seealso>
        </member>
        <member name="P:Org.System.Xml.Sax.InputSource.Encoding">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html#setEncoding(java.lang.String)">
            InputSource.get/setEncoding</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.InputSource.PublicId">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html#setPublicId(java.lang.String)">
            InputSource.get/setPublicId</see> on www.saxproject.org.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.InputSource.SystemId">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html#setSystemId(java.lang.String)">
            InputSource.get/setSystemId</see> on www.saxproject.org.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.InputSource`1">
            <summary>Input source with a generic Source property.</summary>
            <remarks>The source could be a <c>Stream</c> or <c>TextReader</c>. It will not
            be disposed after use - that responsibility is left to the application.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html">
            InputSource on www.saxproject.org</seealso>
        </member>
        <member name="P:Org.System.Xml.Sax.InputSource`1.Source">
            <summary>Gives access to the input data.</summary>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/InputSource.html#setByteStream(java.io.InputStream)">
            InputSource.get/setByteStream on www.saxproject.org</seealso>
        </member>
        <member name="T:Org.System.Xml.Sax.RsId">
            <summary>Identifies localized string constants.</summary> 
        </member>
        <member name="T:Org.System.Xml.Sax.Resources">
            <summary>Enables access to localized resources.</summary> 
        </member>
        <member name="M:Org.System.Xml.Sax.Resources.GetString(Org.System.Xml.Sax.RsId)">
            <summary>Returns localized string constants.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.ParseErrorImpl">
            <summary>Default implementation for <see cref="T:Org.System.Xml.Sax.ParseError"/>.</summary>
            <remarks>For some parsers a different implementation may be preferable.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetErrorId(System.String)">
            <summary>Set error id.</summary>
            <remarks>Makes re-use of a <see cref="T:Org.System.Xml.Sax.ParseError"/> instance possible,
            together with <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.Init(System.String,System.String,System.String,System.Int64,System.Int64)"/> and <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetBaseException(System.Exception)"/>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetBaseException(System.Exception)">
            <summary>Set base exception.</summary>
            <remarks>Makes re-use of a <see cref="T:Org.System.Xml.Sax.ParseError"/> instance possible,
            together with <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.Init(System.String,System.String,System.String,System.Int64,System.Int64)"/> and <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetErrorId(System.String)"/>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.Init(System.String,System.String,System.String,System.Int64,System.Int64)">
            <summary>Initialize instance data.</summary>
            <remarks>Makes re-use of a <see cref="T:Org.System.Xml.Sax.ParseError"/> instance possible,
            together with <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetErrorId(System.String)"/> and <see cref="M:Org.System.Xml.Sax.Helpers.ParseErrorImpl.SetBaseException(System.Exception)"/>.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.OnPropertyChange`1">
            <summary>Call-back delegate, useful when implementing <see cref="T:Org.System.Xml.Sax.IProperty`1"/>.</summary>
            <remarks>One can re-use the same <see cref="T:Org.System.Xml.Sax.IProperty`1"/> implementation class
            without the need to subclass it for a specific target property. One simply
            registers an <c>OnPropertyChange</c> delegate with the <see cref="T:Org.System.Xml.Sax.IProperty`1"/>
            instance which gets called whenever <see cref="P:Org.System.Xml.Sax.IProperty`1.Value"/> changes.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.PropertyImpl`1">
            <summary>Implementaton of <see cref="T:Org.System.Xml.Sax.IProperty`1"/> interface which calls back through
            a delegate on every change of the property value.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.Helpers.PropertyImpl`1.Name">
            <summary>The Name property must be overriden in a derived class.</summary>
            <remarks>This allows one to save the space needed for a name field.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.AttributesImpl">
            <summary>Default implementation of the <see cref="T:Org.System.Xml.Sax.IAttributes"/> interface.</summary>
            <remarks>Differences to Java implementation: the <c>GetLocalName()</c>,
            <c>GetQName()</c>, <c>GetType()</c>, <c>GetURI()</c> and <c>GetValue()</c>
            methods throw an exception when no attribute matching the arguments is found.
            In Java these methods return <c>null</c>, which is inconsistent since the same GetXXX()
            methods in Java's Attributes2 and the SetXXX() methods in Java's AttributesImpl
            class do throw exceptions in the same situation.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/AttributesImpl.html">
            AttributesImpl on www.saxproject.org</seealso>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Attributes2Impl.html">
            Attributes2Impl on www.saxproject.org</seealso>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.Clone">
            <summary>Returns clone of <c>AttributesImpl</c> instance.</summary>
            <remarks>Only <see cref="T:Org.System.Xml.Sax.Helpers.AttributesImpl.Attribute"/> fields are cloned, not the
            other fields like <see cref="P:Org.System.Xml.Sax.Helpers.AttributesImpl.Capacity"/>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.CheckIndex(System.Int32)">
            <summary>Checks if index is in range, throws exception if not.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.NotFoundError(System.String)">
            <summary>Helper routine for throwing an <see cref="T:System.ArgumentException"/>
            when an attribute is not found, with message loaded from resources.</summary>
            <param name="qName">Qualified name of attribute.</param>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.NotFoundError(System.String,System.String)">
            <summary>Helper routine for throwing an <see cref="T:System.ArgumentException"/>
            when an attribute is not found, with message loaded from resources.</summary>
            <param name="uri">URI of attribute's qualified name.</param>
            <param name="localName">Local part of attribute's qualified name.</param>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.InternalSetAttribute(Org.System.Xml.Sax.Helpers.AttributesImpl.Attribute@,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Helper routine for quickly setting the fields of an attribute.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.System#ICloneable#Clone">
            <summary>See <see cref="M:Org.System.Xml.Sax.Helpers.AttributesImpl.Clone"/>.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.AddAttribute(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Add an attribute by specifying all its properties.</summary>
            <remarks>If there is no namespace, pass the empty string for
            the <c>uri</c> argument, and not <c>null</c>.</remarks>
            <returns>Index of new attribute.</returns>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.AddAttribute(Org.System.Xml.Sax.IAttributes,System.Int32)">
            <summary>Add an attribute taken from an existing set of attributes.</summary>
            <returns>Index of added attribute.</returns>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.Clear">
            <summary>Remove all attributes, but don't shrink capacity.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.RemoveAttribute(System.Int32)">
            <summary>Remove attribute at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetAttribute(System.Int32,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>Set attribute properties at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetAttributes(Org.System.Xml.Sax.IAttributes)">
            <summary>Copy a whole set of attributes.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetLocalName(System.Int32,System.String)">
            <summary>Set local name of attribute at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetQName(System.Int32,System.String)">
            <summary>Set qualified name of attribute at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetType(System.Int32,System.String)">
            <summary>Set type of attribute at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetURI(System.Int32,System.String)">
            <summary>Set namespace URI of attribute at index.</summary>
            <remarks>For removing the namespace, pass the empty string
            for the <c>uri</c> argument, and not <c>null</c>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetValue(System.Int32,System.String)">
            <summary>Set value of attribute at index.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.AttributesImpl.SetIsSpecified(System.Int32,System.Boolean)">
            <summary>Set if attribute at index is specified (not defaulted).</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.Helpers.AttributesImpl.Atts">
            <summary>All attributes are stored in this struct array.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.Helpers.AttributesImpl.StrBuilder">
            <summary>String builder helper object.</summary>
        </member>
        <member name="P:Org.System.Xml.Sax.Helpers.AttributesImpl.Capacity">
            <summary>Capacity for holding <see cref="T:Org.System.Xml.Sax.Helpers.AttributesImpl.Attribute"/> instances.</summary>
            <remarks>Can be initialized to avoid costly re-allocations
            when new attributes are added. Its value must not be less
            than the value of the <see cref="P:Org.System.Xml.Sax.Helpers.AttributesImpl.Length"/> property.</remarks>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.AttributesImpl.Attribute">
            <summary>Holds all the fields for an attribute.</summary>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.LocatorImpl">
            <summary>Default implementation of the <see cref="T:Org.System.Xml.Sax.ILocator"/> interface.</summary>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/LocatorImpl.html">
            LocatorImpl on www.saxproject.org</seealso>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/ext/Locator2Impl.html">
            Locator2Impl on www.saxproject.org</seealso>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.DefaultHandler">
            <summary>No-op implementation of SAX interfaces, to be derived from.</summary>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html">
            DefaultHandler on www.saxproject.org</seealso>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/ext/DefaultHandler2.html">
            DefaultHandler2 on www.saxproject.org</seealso>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.XmlFilterImpl">
            <summary>Base class for deriving an XML filter.</summary>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/XMLFilterImpl.html">
            JavaDoc on www.saxproject.org</seealso>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.XmlFilterImpl.GetFeature(System.String)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/XMLFilterImpl.html#getFeature(java.lang.String)">
            getFeature(java.lang.String)</see> on www.saxproject.org.</summary>
            <remarks>Difference to Java: Will throw <see cref="T:Org.System.Xml.Sax.SaxException"/>
            if parent is <c>null</c>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.XmlFilterImpl.SetFeature(System.String,System.Boolean)">
            <summary>See <see href="http://www.saxproject.org/apidoc/org/xml/sax/helpers/XMLFilterImpl.html#setFeature(java.lang.String, boolean)">
            setFeature(java.lang.String, boolean)</see> on www.saxproject.org.</summary>
            <remarks>Difference to Java: Will throw <see cref="T:Org.System.Xml.Sax.SaxException"/>
            if parent is <c>null</c>.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.XmlFilterImpl.GetProperty``1(System.String)">
            <summary>Returns an <see cref="T:Org.System.Xml.Sax.IProperty`1"/> interface for the property
            identified by <c>name</c>.</summary>
            <remarks>Difference to Java: Will throw <see cref="T:Org.System.Xml.Sax.SaxException"/>
            if parent is <c>null</c>.</remarks>
            <seealso href="http://www.saxproject.org/apidoc/org/xml/sax/XMLReader.html#getProperty(java.lang.String)">
            getProperty(java.lang.String) on www.saxproject.org</seealso>
        </member>
        <member name="T:Org.System.Xml.Sax.Helpers.SaxReaderFactory">
            <summary>Factory class for creating new <see cref="T:Org.System.Xml.Sax.IXmlReader"/> instances.</summary>
            <remarks>A default implementation of <see cref="T:Org.System.Xml.Sax.IXmlReader"/> can be registered
            in the system configuration file "machine.config", under the section appSettings.
            The keys to be registered are "Org.System.Xml.Sax.ReaderClass" and
            "Org.System.Xml.Sax.ReaderAssembly". The class name must be fully qualified,
            the assembly name can be a partial name.</remarks>
        </member>
        <member name="F:Org.System.Xml.Sax.Helpers.SaxReaderFactory.ReaderAssembly">
            <summary>Key name for registering the default parser assembly in
            the machine.config file.</summary>
        </member>
        <member name="F:Org.System.Xml.Sax.Helpers.SaxReaderFactory.ReaderClass">
            <summary>Key name for registering the default parser class in
            the machine.config file.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.SaxReaderFactory.CreateInstance(System.Type,System.Object[])">
            <summary>Creates an instance of <c>readerType</c> if it has a constructor
            matching the runtime types in the <c>args</c> array of parameters.</summary>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.SaxReaderFactory.FindReaderClass(System.Reflection.Assembly)">
            <summary>Returns the first class-type it can find in the
            <see cref="T:System.Reflection.Assembly"/> argument that implements <see cref="T:Org.System.Xml.Sax.IXmlReader"/>.
            Returns <c>null</c> if there is no such class.</summary>
            <remarks>This will not find classes that have unbound generic parameters.</remarks>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.SaxReaderFactory.CreateReader(System.Reflection.Assembly,System.Object[])">
            <summary>Creates a new instance of <see cref="T:Org.System.Xml.Sax.IXmlReader"/> based on the
            assembly and constructor arguments that are passed as parameters.</summary>
            <remarks>Searches the <see cref="T:System.Reflection.Assembly"/> argument for classes that
            implement <see cref="T:Org.System.Xml.Sax.IXmlReader"/> and have a constructor matching
            the types of the parameters in the <c>args</c> array. Creates a new
            instance of the first class it finds.</remarks>
            <returns><see cref="T:Org.System.Xml.Sax.IXmlReader"/> instance.</returns>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.SaxReaderFactory.CreateReader(System.Reflection.Assembly,System.String,System.Object[])">
            <summary>Creates a new instance of <see cref="T:Org.System.Xml.Sax.IXmlReader"/> based on the assembly,
            class name and constructor arguments that are passed as parameters.</summary>
            <remarks>The types of the objects in the <c>args</c> array must match
            a constructor signature of the class.</remarks>
            <returns><see cref="T:Org.System.Xml.Sax.IXmlReader"/> instance.</returns>
        </member>
        <member name="M:Org.System.Xml.Sax.Helpers.SaxReaderFactory.CreateReader(System.Object[])">
            <summary>Creates a new instance of <see cref="T:Org.System.Xml.Sax.IXmlReader"/> based on
            the constructor arguments that are passed as parameters.</summary>
            <remarks>The assembly and class are determined by first checking the
            machine configuration file's appSettings section if a default parser is
            specified. If that fails, the loaded assemblies are searched for a class
            implementing <see cref="T:Org.System.Xml.Sax.IXmlReader"/>. The types of the objects in the
            <c>args</c> array must match a constructor signature of the class.</remarks>
            <returns><see cref="T:Org.System.Xml.Sax.IXmlReader"/> instance.</returns>
        </member>
    </members>
</doc>
